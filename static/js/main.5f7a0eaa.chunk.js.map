{"version":3,"sources":["Components/Phonebook/Phonebook.module.css","Components/SectionTitle/SectionTitle.js","Components/Phonebook/Phonebook.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","SectionTitle","title","defaultProps","Phonebook","state","name","number","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","onAddContact","getExsistName","contacts","find","contact","toLowerCase","includes","exsistName","this","className","styles","wrapper","onSubmit","undefined","alert","type","onChange","placeholder","pattern","Component","ContactList","onRemoveContact","map","id","key","onClick","Filter","onChangeFilter","App","filter","addContact","uuidv4","prevState","changeFilter","getVisiableContacts","removeContact","contactId","prev","savedLSC","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visiableContact","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f7a0eaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Phonebook_wrapper__1DYxd\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title }) => <h2>{title}</h2>;\n\nexport default SectionTitle;\n\nSectionTitle.defaultProps = {\n  title: '',\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport PropTypes from 'prop-types';\nimport styles from './Phonebook.module.css';\n\nexport default class Phonebook extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    if (e.target.name === 'name') {\n      this.setState({\n        name: e.target.value,\n      });\n    } else\n      this.setState({\n        number: e.target.value,\n      });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n  };\n\n  getExsistName = () => {\n    const name = this.state.name;\n    const { contacts } = this.props;\n    return contacts.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n  };\n\n  render() {\n    const exsistName = this.getExsistName();\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <SectionTitle title=\"Phonebook\" />\n        <form\n          className={styles.wrapper}\n          onSubmit={e => {\n            if (exsistName === undefined) {\n              this.handleSubmit(e);\n            } else alert(`${exsistName.name} is already in contacts.`);\n          }}\n        >\n          <label className=\"Name-label\">\n            Name\n            <input\n              className=\"Name-input\"\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"Number-label\">\n            Number\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"XXX-XX-XX\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            />\n          </label>\n          <button type=\"submit\" className=\"Phonebook-button\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nPhonebook.defaultProps = {\n  contacts: [],\n};\n\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <>\n    <ul className=\"Contacts-list\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            className=\"DeleteContact-button\"\n            onClick={() => onRemoveContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <label className=\"Filter-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"Filter-input\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Phonebook from './Components/Phonebook/Phonebook';\nimport ContactList from './Components/ContactsList/ContactsList';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport Filter from './Components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    // console.log(\"Cotacts componentDidMount\");\n    const savedLSC = localStorage.getItem('contacts');\n    if (savedLSC) { this.setState({ contacts: JSON.parse(savedLSC), }); }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('contacts componentDidUpdate');\n    if (prevState.contacts !== this.state.contacts) { localStorage.setItem('contacts', JSON.stringify(this.state.contacts)) }\n  }\n\n  addContact = (name, number) => {\n    const uuid = uuidv4();\n    const contact = {\n      id: uuid,\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisiableContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prev => {\n      return { contacts: prev.contacts.filter(({ id }) => id !== contactId) };\n    });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    const { filter } = this.state;\n    const visiableContact = this.getVisiableContacts();\n\n    return (\n      <>\n        <Phonebook onAddContact={this.addContact} contacts={contacts} />\n        <SectionTitle title=\"Contacts\" />\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visiableContact.length > 0 ? (\n          <ContactList\n            contacts={visiableContact}\n            onRemoveContact={this.removeContact}\n          />\n        ) : (\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}